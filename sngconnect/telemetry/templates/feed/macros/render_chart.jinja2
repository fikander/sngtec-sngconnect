{#
    container_id = <ID of DOM element to render the chart in>;
    range_set_button = <jquery query to range setting button>;
    last_set_button = <jquery query to last setting buttons>;
    rendering_data = {
        'id': <chart definition ID>,
        'name': <chart definition title>,
        'type': 'LINEAR',
        'data_url': <url to data API>,
        'data_stream_templates': <ordered by ID, important!>[
            {
                'id': <template ID>,
                'name': <parameter name>,
                'measurement_unit': <measurement unit>,
            }
        ]
    };
    last = <show last n hours>;
#}
{% macro render_chart(container_id, range_set_button, last_set_buttons, rendering_data, last=None) %}
    <script>
        $(function(){
            function reload_chart_data(chart, parameters) {
                chart.showLoading();
                $.getJSON(
                    {{ rendering_data.data_url|tojson }},
                    parameters,
                    function(data, textStatus, jqXHR) {
                        data = data.map(function(a){
                            return a.map(function(b){
                                return [
                                    Date.parse(b[0]),
                                    parseFloat(b[1])
                                ];
                            });
                        });
                        {% for data_stream_template in rendering_data.data_stream_templates %}
                            chart.series[{{ loop.index0|tojson}}].setData(
                                data[{{ loop.index0|tojson }}]
                            );
                        {% endfor %}
                        chart.hideLoading();
                    }
                );
            }
            var chart = new Highcharts.Chart({
                chart: {
                    renderTo: {{ container_id|tojson }},
                    zoomType: 'x',
                    {% if rendering_data.type == 'DIFFERENTIAL' %}
                        type: 'column',
                    {% else %}
                        type: 'spline',
                    {% endif %}
                    backgroundColor: null,
                    style: {
                        fontFamily: '"Helvetica Neue", Helvetica, Arial, sans-serif',
                        fontSize: '13px'
                    },
                    events: {
                        load: function() {
                            reload_chart_data(
                                this,
                                {% if last %}
                                    {
                                        last: {{ last|tojson }}
                                    }
                                {% else %}
                                    {}
                                {% endif %}
                            );
                        }
                    }
                },
                title: {
                    text: null
                },
                credits: {
                    enabled: false
                },
                legend: {
                    layout: 'horizontal',
                    align: 'center',
                    verticalAlign: 'top',
                    floating: false,
                    backgroundColor: null,
                    borderWidth: 0,
                    useHTML: false,
                    shadow: false,
                    itemStyle: {
                        fontFamily: '"Helvetica Neue", Helvetica, Arial, sans-serif',
                        fontSize: '13px'
                    }
                },
                colors: ['#EC6446', '#318BDE', '#89A54E', '#4572A7', '#AA4643'],
                plotOptions: {
                    spline: {
                        dashStyle: 'Solid',
                        shadow: false,
                        lineWidth: 3,
                        marker: {
                            enabled: false
                        }
                    }
                },
                xAxis: [{
                    type: 'datetime'
                }],
                yAxis: [
                    {% for data_stream_template in rendering_data.data_stream_templates %}
                        {
                            labels: {
                                formatter: function() {
                                    return this.value + ' ' + {{ data_stream_template.measurement_unit|tojson }};
                                },
                                style: {
                                    color: {{ loop.cycle('#EC6446', '#318BDE', '#89A54E', '#4572A7', '#AA4643')|tojson }}
                                }
                            },
                            title: {
                                text: {{ data_stream_template.name|tojson }},
                                style: {
                                    color: {{ loop.cycle('#EC6446', '#318BDE', '#89A54E', '#4572A7', '#AA4643')|tojson }}
                                }
                            }
                            {%- if loop.cycle(True, False) -%}
                                ,
                                opposite: true
                            {% endif %}
                        }
                        {%- if not loop.last %},{% endif %}
                    {% endfor %}
                ],
                series: [
                    {% for data_stream_template in rendering_data.data_stream_templates %}
                        {
                            name: {{ data_stream_template.name|tojson }},
                            unit: {{ data_stream_template.measurement_unit|tojson }},
                            yAxis: {{ loop.index0|tojson }}
                        }
                        {%- if not loop.last %},{% endif %}
                    {% endfor %}
                ],
                tooltip: {
                    formatter: function() {
                        return '<b>'+ this.series.name +'</b><br/>'+
                        Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) +': '+ this.y + ' ' + this.series.options.unit;
                    }
                }
            });
            {% if last_set_buttons %}
                $({{ last_set_buttons|tojson }}).click(function(event){
                    event.preventDefault();
                    var button = $(event.target);
                    button.parent(".set-last-range-group").find("button").removeClass("active");
                    button.addClass("active");
                    console.log(button.data("last"));
                    reload_chart_data(chart, {
                        last: button.data("last")
                    });
                });
            {% endif %}
            {% if range_set_button %}
                $({{ range_set_button|tojson }}).click(function(event){
                    event.preventDefault();
                    var button = $(event.target);
                    var start_input = button.parent("form").find("input[name='start']");
                    var end_input = button.parent("form").find("input[name='end']");
                    var start = new Date(Date.parse(start_input.val()));
                    var end = new Date(Date.parse(end_input.val()));
                    if (end <= start) {
                        alert({% filter tojson %}{% trans %}End date must be greater than start date.{% endtrans %}{% endfilter %});
                    } else {
                        $({{ last_set_buttons|tojson }}).parent(".set-last-range-group").find("button").removeClass("active");
                        reload_chart_data(chart, {
                            start: start.toISOString(),
                            end: end.toISOString()
                        });
                    }
                });
            {% endif %}
        });
    </script>
{% endmacro %}
